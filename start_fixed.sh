#!/bin/bash

# Script de d√©marrage avec variables d'environnement forc√©es
echo "üöÄ D√©marrage de l'e-commerce avec configuration forc√©e..."

# Aller dans le r√©pertoire backend
cd ecommerce-backend

# Activer l'environnement virtuel
source venv/bin/activate

# Forcer les variables d'environnement
export DATABASE_URL="postgresql://ecommerce:ecommerce123@localhost:5432/ecommerce"
export SECRET_KEY="dev_secret_key_change_in_production"
export DEBUG="True"
export CORS_ORIGINS="http://localhost:5173,http://localhost:3000"

echo "üìä Variables d'environnement:"
echo "  DATABASE_URL: $DATABASE_URL"
echo "  SECRET_KEY: $SECRET_KEY"
echo "  DEBUG: $DEBUG"

# Test de connexion √† la base de donn√©es
echo "üîç Test de connexion √† PostgreSQL..."
python -c "
import os
os.environ['DATABASE_URL'] = 'postgresql://ecommerce:ecommerce123@localhost:5432/ecommerce'
from database.database import engine
with engine.connect() as conn:
    result = conn.execute('SELECT version()')
    print('‚úÖ Connexion PostgreSQL OK:', result.fetchone()[0])
"

if [ $? -eq 0 ]; then
    echo "‚úÖ Base de donn√©es accessible"
else
    echo "‚ùå Probl√®me de connexion √† la base de donn√©es"
    exit 1
fi

# D√©marrer l'API
echo "üåê D√©marrage de l'API sur http://localhost:8000"
echo "üìö Documentation: http://localhost:8000/docs"
echo "=" * 50

# Utiliser api_postgres_direct.py qui semble plus simple
uvicorn api_postgres_direct:app --host 0.0.0.0 --port 8000 --reload
